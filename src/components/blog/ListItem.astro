---
import { Picture } from '@astrojs/image/components';
import PostTags from '~/components/atoms/Tags.astro';
import Authors from '../atoms/Authors.astro';

import { getPermalink } from '~/utils/permalinks';
import { findImage } from '~/utils/images';
import { getFormattedDate } from '~/utils/utils';

const { post } = Astro.props;

const image = await findImage(post.image);
---

<article class={`max-w-md mx-auto md:max-w-none grid gap-6 md:gap-8 ${image ? 'md:grid-cols-2' : ''}`}>
	{
		image && (
			<a class="relative block group" href={getPermalink(post.slug, 'post')}>
				<div class="relative h-0 pb-[56.25%] md:pb-[75%] md:h-80 lg:pb-[56.25%] overflow-hidden bg-neutral-400 dark:bg-neutral-700 rounded">
					{image && (
						<Picture
							src={image}
							class="absolute inset-0 object-cover w-full h-full mb-6 rounded bg-neutral-400 dark:bg-neutral-700"
							widths={[400, 900]}
							sizes="(max-width: 900px) 400px, 900px"
							alt={post.title}
							aspectRatio={16 / 9}
						/>
					)}
				</div>
			</a>
		)
	}
	<div>
		<header>
			<h4
				class="mb-2 text-base font-normal uppercase leading-snug tracking-wider sm:text-base text-primary-600 dark:text-secondary-400"
			>
				<a
					class="transition duration-200 ease-in"
					href={getPermalink(post.category, 'category')}
				>
					{post.category}
				</a>
			</h4>
			<h2
				class="mb-2 text-2xl font-medium leading-snug tracking-wide sm:text-3xl text-neutral-900 dark:text-neutral-50 font-heading"
			>
				<a
					class="transition duration-200 ease-in hover:text-primary-600 dark:hover:text-secondary-400"
					href={getPermalink(post.slug, 'post')}
				>
					{post.title}
				</a>
			</h2>
			<Authors authors={post.authors} class="text-base my-2"/>
		</header>
		<p class="flex-grow font-normal tracking-wide text-md sm:text-lg text-neutral-500 dark:text-neutral-400">
			{post.excerpt || post.description}
		</p>

		<footer class="mt-4">
			<div>
				<span class="text-sm font-medium tracking-wide text-neutral-500 dark:text-neutral-600">
					<time datetime={post.publishDate}>{getFormattedDate(post.publishDate)}</time> â€¢ {Math.ceil(post.readingTime)} min
					read
				</span>
			</div>
			<div class="mt-4">
				<PostTags tags={post.tags} />
			</div>
		</footer>
	</div>
</article>
